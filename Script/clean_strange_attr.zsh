#!/bin/zsh
# UTF-8 with BOM

# === Config (do not change) ===================================================
# This script is intended to be run from:  /Users/senat/Develop/MiMiNavigator/Script
# It will scan and clean in:              /Users/senat/Develop/MiMiNavigator
# Comments must be in English only.

set -euo pipefail

# Resolve project root relative to this script (‚Ä¶/Script -> ..)
SCRIPT_DIR="$(cd -- "$(dirname -- "$0")" && pwd)"
PROJECT_ROOT="$(cd -- "${SCRIPT_DIR}/.." && pwd)"

# Targets for scanning
ATTR_REGEX='com.apple.(FinderInfo|ResourceFork|quarantine)'

# Optional mode flags:
#   --list    : list files only, do not modify
#   --clean   : clean without confirmation
MODE="${1:-}"   # empty | --list | --clean

# Switch locale to avoid "sed: illegal byte sequence" on non-UTF8 xattrs
export LC_ALL=C

echo "üîç Scanning for unwanted extended attributes in: ${PROJECT_ROOT}"
echo "    Pattern: ${ATTR_REGEX}"
echo

# Collect dirty files into an array
typeset -a DIRTY
DIRTY=()

# Use -print0 to support any filenames; check xattrs with xattr -l
# and grep for unwanted attributes.
while IFS= read -r -d '' f; do
  if xattr -l "$f" 2>/dev/null | grep -Eq "${ATTR_REGEX}"; then
    DIRTY+=("$f")
  fi
done < <(find "${PROJECT_ROOT}" -type f -print0 2>/dev/null)

COUNT=${#DIRTY[@]}

if [[ $COUNT -eq 0 ]]; then
  echo "‚úÖ No files with FinderInfo/ResourceFork/quarantine found."
  exit 0
fi

echo "‚ö†Ô∏è  Found ${COUNT} file(s) with unwanted attributes:"
printf '%s\n' "${DIRTY[@]}"
echo

# If --list, stop here
if [[ "${MODE}" == "--list" ]]; then
  echo "‚ÑπÔ∏è  List mode: no changes made."
  exit 0
fi

# Ask for confirmation unless --clean
if [[ "${MODE}" != "--clean" ]]; then
  read "reply?Do you want to remove these attributes? (y/N) "
  if [[ ! "$reply" =~ ^[Yy]$ ]]; then
    echo "‚ùå Cleanup skipped."
    exit 0
  fi
fi

# Clean attributes
echo "üßπ Cleaning extended attributes..."
for f in "${DIRTY[@]}"; do
  # Remove all extended attributes from the file
  xattr -c "$f" 2>/dev/null || true
done

echo "üîÅ Verifying after cleanup..."
POST_COUNT=0
for f in "${DIRTY[@]}"; do
  if xattr -l "$f" 2>/dev/null | grep -Eq "${ATTR_REGEX}"; then
    (( POST_COUNT++ ))
    echo "   ‚ûú Still dirty: $f"
  fi
done

if [[ $POST_COUNT -eq 0 ]]; then
  echo "‚úÖ All unwanted attributes removed successfully."
  exit 0
else
  echo "‚ö†Ô∏è  ${POST_COUNT} file(s) still report unwanted attributes. They may be regenerated by tools."
  echo "   Consider checking your build steps or re-running this script."
  exit 1
fi