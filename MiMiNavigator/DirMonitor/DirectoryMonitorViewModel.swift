//  DirectoryMonitorViewModel.swift
//  Directory Monitoring View Model Utility
//
//  Created by Iakov Senatov on 23.01.25.
//  Copyright ¬© 2025 Senatov. All rights reserved.
//
//  Dependencies: SwiftUI
//

/**
 Example Usage:
 struct ContentView: View {
 @StateObject private var viewModel = DirectoryMonitorViewModel(directoryPath: "/path/to/Sequoia")

 var body: some View {
 VStack {
 Text(viewModel.directoryChanged ? "Directory changed! üö®" : "No changes ‚úÖ")
 .font(.title)
 .padding()

 Button("Reset") {
 viewModel.directoryChanged = false
 }
 }
 .animation(.default, value: viewModel.directoryChanged)
 }
 }
 */

//
//  DirectoryMonitorViewModel.swift
//  ViewModel, —Ä–∞–±–æ—Ç–∞—é—â–∏–π –Ω–∞ @MainActor, —á—Ç–æ–±—ã SwiftUI –±–µ–∑–æ–ø–∞—Å–Ω–æ
//  –Ω–∞–±–ª—é–¥–∞–ª @Published-—Å–≤–æ–π—Å—Ç–≤–∞
//

import SwiftUI

@MainActor
final class DirectoryMonitorViewModel: ObservableObject {
    @Published var directoryChanged: Bool = false
    @Published var managerState: String = "No changes yet"

    // "–ù–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π" –º–æ–Ω–∏—Ç–æ—Ä
    private var monitor: DirectoryMonitor?
    // "–°—Ä–µ–¥–Ω–∏–π" —Å–ª–æ–π –ª–æ–≥–∏–∫–∏
    private var eventManager: DirectoryEventManager?

    init(directoryPath: String = "/path/to/Sequoia") {
        setup(directoryPath: directoryPath)
    }

    deinit {
    }

    private func setup(directoryPath: String) {
        let monitor = DirectoryMonitor(directoryPath: directoryPath)
        let manager = DirectoryEventManager()

        // –ö–æ–≥–¥–∞ –º–æ–Ω–∏—Ç–æ—Ä —Å–æ–æ–±—â–∞–µ—Ç –æ –Ω–æ–≤–æ–º —Å–æ–±—ã—Ç–∏–∏
        monitor.onDirectoryChanged = { [weak manager, weak self] in
            // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –≤ –º–µ–Ω–µ–¥–∂–µ—Ä
            manager?.handleDirectoryChangeEvent()

            // –¢–∞–∫–∂–µ —Å—Ä–∞–∑—É –º–µ–Ω—è–µ–º —Ñ–ª–∞–≥ "directoryChanged" (–µ—Å–ª–∏ –Ω–∞–¥–æ)
            self?.directoryChanged = true
            DispatchQueue.main.asyncAfter(deadline: .now() + 1) {
                self?.directoryChanged = false
            }
        }

        // –ö–æ–≥–¥–∞ –º–µ–Ω–µ–¥–∂–µ—Ä –º–µ–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —Å–æ–æ–±—â–∞–µ–º —ç—Ç–æ –≤–æ ViewModel
        manager.onStateUpdated = { [weak self] newState in
            self?.managerState = newState
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫–∏
        self.monitor = monitor
        self.eventManager = manager
    }
}
